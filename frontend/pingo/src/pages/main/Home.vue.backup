<template>
    <div
        class="min-h-screen transition-colors duration-300 bg-black text-green-400 font-mono"
        :style="{ backgroundColor: isDark ? '#000000' : '#0a0a0a' }"
    >
        <!-- Matrix/Terminal Background Effect -->
        <div class="fixed inset-0 pointer-events-none overflow-hidden z-0">
            <div class="matrix-bg opacity-20"></div>
            <div class="terminal-scanlines"></div>
        </div>

        <!-- Main Content -->
        <main class="relative z-10">
            <!-- Terminal Header -->
            <section class="px-4 sm:px-6 lg:px-8 pt-8">
                <div class="max-w-6xl mx-auto">
                    <div class="bg-gray-900 rounded-t-lg border border-gray-700 p-4">
                        <div class="flex items-center space-x-2 mb-4">
                            <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                            <span class="text-gray-400 ml-4 text-sm">root@pingo-share:~$</span>
                        </div>
                        <div class="space-y-2 text-sm">
                            <div class="text-green-400">
                                <span class="text-gray-500">$</span> cat /etc/pingo-release
                            </div>
                            <div class="text-gray-300 pl-4">
                                PInGO Share v2.1.0-alpha<br>
                                Build: {{ new Date().toISOString().split('T')[0] }}<br>
                                Architecture: x86_64<br>
                                License: MIT<br>
                                Status: READY
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- ASCII Art Hero Section -->
            <section class="px-4 sm:px-6 lg:px-8 py-12">
                <div class="max-w-6xl mx-auto">
                    <div class="bg-black border border-green-500 rounded-lg p-6 shadow-lg shadow-green-500/20">
                        <pre class="text-green-400 text-xs sm:text-sm overflow-x-auto">
{{ asciiArt }}
                        </pre>
                        
                        <div class="mt-8 space-y-4">
                            <div class="text-green-400">
                                <span class="text-gray-500">></span> INITIALIZING FILE TRANSFER PROTOCOL...
                            </div>
                            <div class="text-green-400 typewriter" v-if="showTypewriter">
                                <span class="text-gray-500">></span> {{ typewriterText }}
                                <span class="animate-pulse">█</span>
                            </div>
                            
                            <!-- System Specs -->
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-8 text-xs">
                                <div class="bg-gray-900 border border-gray-700 rounded p-3">
                                    <div class="text-yellow-400 mb-2">SYSTEM STATUS</div>
                                    <div class="space-y-1 text-green-400">
                                        <div>CPU: {{ Math.floor(Math.random() * 20 + 10) }}% usage</div>
                                        <div>RAM: {{ Math.floor(Math.random() * 30 + 40) }}% ({{ Math.floor(Math.random() * 4 + 4) }}GB)</div>
                                        <div>NETWORK: {{ Math.floor(Math.random() * 100 + 900) }} MB/s</div>
                                        <div class="text-green-500">ENCRYPTION: ✓ AES-256</div>
                                    </div>
                                </div>
                                
                                <div class="bg-gray-900 border border-gray-700 rounded p-3">
                                    <div class="text-blue-400 mb-2">REPOSITORY INFO</div>
                                    <div class="space-y-1 text-green-400">
                                        <div>Stars: {{ Math.floor(Math.random() * 100 + 200) }}</div>
                                        <div>Forks: {{ Math.floor(Math.random() * 50 + 45) }}</div>
                                        <div>Issues: {{ Math.floor(Math.random() * 20 + 5) }}</div>
                                        <div>Contributors: {{ Math.floor(Math.random() * 10 + 15) }}</div>
                                    </div>
                                </div>
                                
                                <div class="bg-gray-900 border border-gray-700 rounded p-3">
                                    <div class="text-purple-400 mb-2">TRANSFER STATS</div>
                                    <div class="space-y-1 text-green-400">
                                        <div>Files transferred: {{ Math.floor(Math.random() * 1000 + 5000).toLocaleString() }}</div>
                                        <div>Total data: {{ Math.floor(Math.random() * 100 + 500) }} TB</div>
                                        <div>Uptime: {{ Math.floor(Math.random() * 30 + 60) }} days</div>
                                        <div class="text-green-500">Security breaches: 0</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Command Line Interface Style CTA -->
            <section class="px-4 sm:px-6 lg:px-8 py-8">
                <div class="max-w-6xl mx-auto">
                    <div class="bg-gray-900 border border-gray-700 rounded-lg p-6">
                        <div class="space-y-4">
                            <div class="text-green-400">
                                <span class="text-gray-500">$</span> pingo-share --help
                            </div>
                            <div class="text-gray-300 pl-6 space-y-2 text-sm">
                                <div><span class="text-yellow-400">USAGE:</span> pingo-share [OPTIONS] [FILE...]</div>
                                <div><span class="text-yellow-400">OPTIONS:</span></div>
                                <div class="pl-4 space-y-1">
                                    <div><span class="text-cyan-400">--upload</span>      Upload files to the network</div>
                                    <div><span class="text-cyan-400">--download</span>    Download shared files</div>
                                    <div><span class="text-cyan-400">--encrypt</span>     Enable end-to-end encryption</div>
                                    <div><span class="text-cyan-400">--anonymous</span>   Anonymous transfer mode</div>
                                </div>
                            </div>
                            
                            <!-- Interactive Commands -->
                            <div class="mt-6 flex flex-wrap gap-2">
                                <button
                                    @click="scrollToUpload"
                                    class="bg-green-500 hover:bg-green-600 text-black px-4 py-2 rounded font-mono text-sm transition-colors border-2 border-green-400"
                                >
                                    ./upload.sh --start
                                </button>
                                <button
                                    @click="scrollToFeatures"
                                    class="bg-transparent hover:bg-gray-800 text-green-400 px-4 py-2 rounded font-mono text-sm transition-colors border-2 border-green-400"
                                >
                                    cat README.md
                                </button>
                                <button
                                    class="bg-transparent hover:bg-gray-800 text-yellow-400 px-4 py-2 rounded font-mono text-sm transition-colors border-2 border-yellow-400"
                                    @click="openGitHub"
                                >
                                    git clone repo
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
                                :style="{ background: buttonGradient }"
                            >
                                <span class="relative z-10"
                                    >Start Uploading</span
                                >
                                <div
                                    class="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                                    :style="{ background: hoverGradient }"
                                ></div>
                            </button>

                            <button
                                @click="scrollToFeatures"
                                class="px-8 py-4 border-2 font-semibold rounded-2xl transition-all duration-300 hover:scale-105 backdrop-blur-sm"
                                :style="{
                                    borderColor: isDark
                                        ? 'rgba(255,255,255,0.2)'
                                        : 'rgba(0,0,0,0.2)',
                                    color: isDark ? '#ffffff' : '#000000',
                                }"
                            >
                                Learn More
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Scroll Indicator -->
                <div
                    class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce"
                >
                    <div
                        class="w-6 h-10 border-2 rounded-full flex justify-center"
                        :style="{
                            borderColor: isDark
                                ? 'rgba(255,255,255,0.3)'
                                : 'rgba(0,0,0,0.3)',
                        }"
                    >
                        <div
                            class="w-1 h-3 bg-gradient-to-b from-blue-500 to-purple-500 rounded-full mt-2 animate-pulse"
                        ></div>
                    </div>
                </div>
            </section>

            <!-- Upload Section - Terminal Style -->
            <section
                ref="uploadSection"
                class="px-4 sm:px-6 lg:px-8 py-8"
            >
                <div class="max-w-6xl mx-auto">
                    <div class="bg-black border border-green-500 rounded-lg p-6 shadow-lg shadow-green-500/20">
                        <div class="space-y-4">
                            <!-- Terminal Header for Upload -->
                            <div class="flex items-center space-x-2 mb-4">
                                <div class="w-2 h-2 bg-red-500 rounded-full"></div>
                                <div class="w-2 h-2 bg-yellow-500 rounded-full"></div>
                                <div class="w-2 h-2 bg-green-500 rounded-full"></div>
                                <span class="text-gray-400 ml-4 text-sm font-mono">pingo@upload-daemon:/var/share$</span>
                            </div>
                            
                            
                            <!-- Terminal-style Upload Interface -->
                            <div v-if="uploadComplete" class="space-y-3">
                                <div class="text-green-400 font-mono">
                                    <span class="text-gray-500">$</span> upload-status --check
                                </div>
                                <div class="text-green-400 pl-4 font-mono">
                                    ✓ Files uploaded successfully<br>
                                    ✓ Encryption: AES-256-GCM<br>
                                    ✓ Share link generated<br>
                                    ✓ Ready for distribution
                                </div>
                                <div class="bg-gray-900 border border-green-500 rounded p-3 text-xs font-mono">
                                    <div class="text-yellow-400 mb-2">DOWNLOAD LINK:</div>
                                    <div class="text-green-400 break-all">{{ shareUrl }}</div>
                                </div>
                                <div class="flex gap-2">
                                    <button
                                        @click="copyLink"
                                        class="bg-green-500 hover:bg-green-600 text-black px-3 py-1 rounded font-mono text-sm transition-colors"
                                    >
                                        cp link clipboard
                                    </button>
                                    <button
                                        @click="uploadNew"
                                        class="bg-transparent hover:bg-gray-800 text-green-400 px-3 py-1 rounded font-mono text-sm transition-colors border border-green-400"
                                    >
                                        ./upload.sh --new
                                    </button>
                                </div>
                            </div>

                            <!-- Upload Interface -->
                            <div v-else>
                                <!-- Progress -->
                                <div v-if="isUploading" class="space-y-3">
                                    <div class="text-green-400 font-mono">
                                        <span class="text-gray-500">$</span> transferring files...
                                    </div>
                                    <div class="bg-gray-900 border border-gray-700 rounded p-3">
                                        <div class="flex items-center justify-between text-xs font-mono mb-2">
                                            <span class="text-cyan-400">{{ selectedFiles[0]?.name || 'files.tar.gz' }}</span>
                                            <span class="text-green-400">{{ uploadProgress }}%</span>
                                        </div>
                                        <div class="w-full bg-gray-700 rounded-full h-2">
                                            <div 
                                                class="bg-gradient-to-r from-green-400 to-cyan-400 h-2 rounded-full transition-all duration-300"
                                                :style="{ width: `${uploadProgress}%` }"
                                            ></div>
                                        </div>
                                        <div class="text-xs text-gray-400 mt-2 font-mono">
                                            {{ Math.floor(uploadProgress * 2.34) }} KB/s • ETA: {{ Math.ceil((100 - uploadProgress) / 10) }}s
                                        </div>
                                    </div>
                                </div>

                                <!-- Drag & Drop Area -->
                                <div
                                    v-else
                                    @drop.prevent="onDrop"
                                    @dragover.prevent
                                    @dragenter.prevent
                                    :class="[
                                        'border-2 border-dashed rounded-lg p-8 text-center transition-colors cursor-pointer',
                                        isDragOver 
                                            ? 'border-green-400 bg-gray-900/50' 
                                            : 'border-gray-600 hover:border-gray-500'
                                    ]"
                                    @click="triggerFileInput"
                                >
                                    <div class="space-y-4">
                                        <div class="text-6xl text-gray-500">
                                            📁
                                        </div>
                                        <div class="font-mono">
                                            <div class="text-green-400">
                                                {{ selectedFiles.length > 0 
                                                    ? `${selectedFiles.length} file(s) selected` 
                                                    : '> drop files here or click to select'
                                                }}
                                            </div>
                                            <div class="text-gray-400 text-sm mt-2">
                                                Supported: any file type • Max: unlimited • Encryption: enabled
                                            </div>
                                        </div>
                                        
                                        <!-- File List -->
                                        <div v-if="selectedFiles.length > 0" class="text-left bg-gray-900 border border-gray-700 rounded p-3 text-xs font-mono">
                                            <div class="text-yellow-400 mb-2">SELECTED FILES:</div>
                                            <div class="space-y-1 max-h-32 overflow-y-auto">
                                                <div v-for="file in selectedFiles" :key="file.name" class="text-green-400">
                                                    {{ file.name }} <span class="text-gray-500">({{ formatFileSize(file.size) }})</span>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Upload Button -->
                                        <div v-if="selectedFiles.length > 0">
                                            <button
                                                @click.stop="uploadFiles"
                                                class="bg-green-500 hover:bg-green-600 text-black px-6 py-2 rounded font-mono text-sm transition-colors"
                                            >
                                                ./execute-upload.sh --now
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <input
                                    ref="fileInput"
                                    type="file"
                                    multiple
                                    class="hidden"
                                    @change="onFileSelect"
                                />
                            </div>
                        </div>
                    </div>
                </div>
            </section>
                                @dragover.prevent
                                @drop.prevent="onDrop"
                                @dragenter="isDragging = true"
                                @dragleave="isDragging = false"
                                @click="triggerFileInput"
                                :class="[
                                    'relative border-2 border-dashed transition-all duration-300 cursor-pointer rounded-2xl p-12',
                                    isDragging
                                        ? 'border-blue-500 bg-blue-500/10 scale-[1.02]'
                                        : 'border-gray-300 dark:border-gray-600 hover:border-blue-400 hover:bg-blue-500/5',
                                ]"
                            >
                                <input
                                    type="file"
                                    ref="fileInput"
                                    @change="onFileChange"
                                    class="hidden"
                                    multiple
                                />

                                <div class="text-center space-y-6">
                                    <!-- Upload Icon -->
                                    <div class="relative mx-auto w-24 h-24">
                                        <div
                                            class="absolute inset-0 rounded-2xl blur-xl opacity-30"
                                            :style="{
                                                background: primaryGradient,
                                            }"
                                        ></div>
                                        <div
                                            class="relative rounded-xl sm:rounded-2xl p-4 sm:p-6 flex items-center justify-center"
                                            :style="{
                                                background: primaryGradient,
                                            }"
                                        >
                                            <CloudArrowUpIcon
                                                class="w-10 h-10 sm:w-12 sm:h-12 text-white"
                                            />
                                        </div>
                                    </div>

                                    <!-- Upload Text -->
                                    <div class="space-y-2">
                                        <h3
                                            class="text-xl sm:text-2xl font-bold"
                                            :style="{
                                                color: isDark
                                                    ? '#ffffff'
                                                    : '#000000',
                                            }"
                                        >
                                            {{
                                                selectedFiles.length > 0
                                                    ? `${
                                                          selectedFiles.length
                                                      } file${
                                                          selectedFiles.length >
                                                          1
                                                              ? "s"
                                                              : ""
                                                      } selected`
                                                    : "Drop files here or click to browse"
                                            }}
                                        </h3>
                                        <p
                                            class="text-sm sm:text-base"
                                            :style="{
                                                color: isDark
                                                    ? '#a1a1aa'
                                                    : '#71717a',
                                            }"
                                        >
                                            Support for any file type • No size
                                            limits • Encrypted transfer
                                        </p>
                                    </div>

                                    <!-- Features -->
                                    <div
                                        class="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4 pt-4 sm:pt-6"
                                    >
                                        <div
                                            class="flex items-center justify-center space-x-2 p-2 sm:p-3 rounded-lg sm:rounded-xl"
                                            :style="{
                                                backgroundColor: isDark
                                                    ? 'rgba(255,255,255,0.05)'
                                                    : 'rgba(0,0,0,0.05)',
                                            }"
                                        >
                                            <div
                                                class="w-2 h-2 bg-green-500 rounded-full"
                                            ></div>
                                            <span
                                                class="text-xs sm:text-sm font-medium"
                                                :style="{
                                                    color: isDark
                                                        ? '#a1a1aa'
                                                        : '#71717a',
                                                }"
                                            >
                                                Secure
                                            </span>
                                        </div>
                                        <div
                                            class="flex items-center justify-center space-x-2 p-2 sm:p-3 rounded-lg sm:rounded-xl"
                                            :style="{
                                                backgroundColor: isDark
                                                    ? 'rgba(255,255,255,0.05)'
                                                    : 'rgba(0,0,0,0.05)',
                                            }"
                                        >
                                            <div
                                                class="w-2 h-2 bg-blue-500 rounded-full"
                                            ></div>
                                            <span
                                                class="text-xs sm:text-sm font-medium"
                                                :style="{
                                                    color: isDark
                                                        ? '#a1a1aa'
                                                        : '#71717a',
                                                }"
                                            >
                                                Fast
                                            </span>
                                        </div>
                                        <div
                                            class="flex items-center justify-center space-x-2 p-2 sm:p-3 rounded-lg sm:rounded-xl"
                                            :style="{
                                                backgroundColor: isDark
                                                    ? 'rgba(255,255,255,0.05)'
                                                    : 'rgba(0,0,0,0.05)',
                                            }"
                                        >
                                            <div
                                                class="w-2 h-2 bg-purple-500 rounded-full"
                                            ></div>
                                            <span
                                                class="text-xs sm:text-sm font-medium"
                                                :style="{
                                                    color: isDark
                                                        ? '#a1a1aa'
                                                        : '#71717a',
                                                }"
                                            >
                                                Simple
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <!-- Drag overlay -->
                                <div
                                    v-if="isDragging"
                                    class="absolute inset-0 rounded-xl sm:rounded-2xl flex items-center justify-center z-20 bg-blue-500/20 backdrop-blur-sm"
                                >
                                    <div
                                        class="text-xl sm:text-2xl font-bold text-blue-600"
                                    >
                                        Drop files here
                                    </div>
                                </div>
                            </div>

                            <!-- Selected Files -->

                            <div
                                v-if="
                                    selectedFiles.length > 0 && !uploadComplete
                                "
                                class="mt-8 space-y-4"
                            >
                                <!-- Validity Selection -->
                                <div
                                    class="mb-6"
                                    v-if="validityOptions.length > 0"
                                >
                                    <label
                                        class="block text-sm font-medium mb-2 transition-colors duration-300"
                                        :style="{
                                            color: isDark
                                                ? '#d1d5db'
                                                : '#374151',
                                        }"
                                    >
                                        🕐 File Expiration
                                    </label>

                                    <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-2">
                                        <label
                                            v-for="option in validityOptions"
                                            :key="option.value"
                                            class="flex flex-col items-center p-2 rounded-lg border cursor-pointer transition-all duration-200 hover:scale-105 text-center"
                                            :class="[
                                                selectedValidity === option.value
                                                    ? isDark
                                                        ? 'border-amber-500 bg-amber-600/20 shadow-md shadow-amber-500/10'
                                                        : 'border-amber-500 bg-amber-50 shadow-md shadow-amber-500/10'
                                                    : isDark
                                                    ? 'border-gray-600/50 bg-gray-800/30 hover:border-gray-500'
                                                    : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'
                                            ]"
                                        >
                                            <input
                                                type="radio"
                                                v-model="selectedValidity"
                                                :value="option.value"
                                                class="sr-only"
                                            />
                                            
                                            <!-- Custom Radio Button -->
                                            <div
                                                class="w-3 h-3 rounded-full border flex items-center justify-center mb-1 flex-shrink-0 transition-all duration-200"
                                                :class="[
                                                    selectedValidity === option.value
                                                        ? isDark
                                                            ? 'border-amber-400 bg-amber-500'
                                                            : 'border-amber-500 bg-amber-500'
                                                        : isDark
                                                        ? 'border-gray-500'
                                                        : 'border-gray-300'
                                                ]"
                                            >
                                                <div
                                                    v-if="selectedValidity === option.value"
                                                    class="w-1 h-1 rounded-full bg-white"
                                                ></div>
                                            </div>
                                            
                                            <!-- Option Content -->
                                            <div class="min-w-0">
                                                <div 
                                                    class="font-medium text-xs mb-0.5 leading-tight"
                                                    :class="[
                                                        selectedValidity === option.value
                                                            ? isDark
                                                                ? 'text-amber-300'
                                                                : 'text-amber-700'
                                                            : isDark
                                                            ? 'text-gray-100'
                                                            : 'text-gray-900'
                                                    ]"
                                                >
                                                    {{ option.label }}
                                                </div>
                                                <div 
                                                    class="text-xs opacity-75 leading-tight"
                                                    :class="[
                                                        selectedValidity === option.value
                                                            ? isDark
                                                                ? 'text-amber-200'
                                                                : 'text-amber-600'
                                                            : isDark
                                                            ? 'text-gray-400'
                                                            : 'text-gray-500'
                                                    ]"
                                                >
                                                    {{ option.description }}
                                                </div>
                                            </div>
                                        </label>
                                    </div>
                                </div>
                                <h4
                                    class="text-lg font-semibold"
                                    :style="{
                                        color: isDark ? '#ffffff' : '#000000',
                                    }"
                                >
                                    Selected Files
                                </h4>
                                <div class="grid gap-3 sm:gap-4">
                                    <div
                                        v-for="(file, index) in selectedFiles"
                                        :key="index"
                                        class="rounded-xl border transition-all duration-300 overflow-hidden"
                                        :style="{
                                            backgroundColor: isDark
                                                ? 'rgba(255,255,255,0.05)'
                                                : 'rgba(0,0,0,0.05)',
                                            borderColor: isDark
                                                ? 'rgba(255,255,255,0.1)'
                                                : 'rgba(0,0,0,0.1)',
                                        }"
                                    >
                                        <div
                                            class="flex flex-col sm:flex-row sm:items-center gap-3 sm:gap-4 p-3 sm:p-4"
                                        >
                                            <div
                                                class="flex items-center space-x-3 flex-1 min-w-0"
                                            >
                                                <div
                                                    class="flex items-center justify-center flex-shrink-0"
                                                >
                                                    <img 
                                                        :src="getFileIconPath(file.name)" 
                                                        :alt="getFileIconAltText(file.name)"
                                                        class="w-5 h-5 sm:w-6 sm:h-6 object-contain"
                                                    />
                                                </div>
                                                <div class="min-w-0 flex-1">
                                                    <p
                                                        class="font-medium text-sm sm:text-base truncate break-all"
                                                        :style="{
                                                            color: isDark
                                                                ? '#ffffff'
                                                                : '#000000',
                                                        }"
                                                        :title="file.name"
                                                    >
                                                        {{ file.name }}
                                                    </p>
                                                    <p
                                                        class="text-xs sm:text-sm"
                                                        :style="{
                                                            color: isDark
                                                                ? '#a1a1aa'
                                                                : '#71717a',
                                                        }"
                                                    >
                                                        {{
                                                            formatFileSize(
                                                                file.size
                                                            )
                                                        }}
                                                    </p>
                                                </div>
                                            </div>
                                            <div
                                                class="flex items-center gap-2 w-full sm:w-auto"
                                            >
                                                <button
                                                    v-if="canPreview(file)"
                                                    @click="
                                                        togglePreview(index)
                                                    "
                                                    class="px-2 sm:px-3 py-2 rounded-lg text-xs sm:text-sm font-medium transition-all duration-200 hover:scale-105 flex-1 sm:flex-none"
                                                    :class="
                                                        previewingFiles.has(
                                                            index
                                                        )
                                                            ? 'bg-red-500 hover:bg-red-600 text-white'
                                                            : 'bg-emerald-500 hover:bg-emerald-600 text-white'
                                                    "
                                                    :disabled="isUploading"
                                                >
                                                    <EyeIcon
                                                        v-if="
                                                            !previewingFiles.has(
                                                                index
                                                            )
                                                        "
                                                        class="w-3 h-3 sm:w-4 sm:h-4 mr-1 inline"
                                                    />
                                                    <EyeSlashIcon
                                                        v-else
                                                        class="w-3 h-3 sm:w-4 sm:h-4 mr-1 inline"
                                                    />
                                                    {{
                                                        previewingFiles.has(
                                                            index
                                                        )
                                                            ? "Hide"
                                                            : "Preview"
                                                    }}
                                                </button>
                                                <button
                                                    @click="removeFile(index)"
                                                    class="p-2 rounded-lg text-red-500 hover:bg-red-500 hover:text-white transition-colors flex-shrink-0"
                                                    :disabled="isUploading"
                                                    :title="'Remove ' + file.name"
                                                >
                                                    <XMarkIcon class="w-3 h-3 sm:w-4 sm:h-4" />
                                                </button>
                                            </div>

                                            <!-- Expiration selector -->
                                        </div>

                                        <!-- Preview Section -->
                                        <div
                                            v-if="previewingFiles.has(index)"
                                            class="px-3 sm:px-4 pb-3 sm:pb-4"
                                        >
                                            <div
                                                class="rounded-lg border-t pt-3 sm:pt-4"
                                                :style="{
                                                    borderColor: isDark
                                                        ? 'rgba(255,255,255,0.1)'
                                                        : 'rgba(0,0,0,0.1)',
                                                }"
                                            >
                                                <!-- Image preview -->
                                                <div
                                                    v-if="
                                                        [
                                                            'jpg',
                                                            'jpeg',
                                                            'png',
                                                            'gif',
                                                            'webp',
                                                        ].includes(
                                                            getFileExtension(
                                                                file
                                                            )
                                                        )
                                                    "
                                                >
                                                    <img
                                                        :src="
                                                            previewUrls.get(
                                                                index
                                                            )
                                                        "
                                                        :alt="file.name"
                                                        class="w-full max-w-xs sm:max-w-md mx-auto rounded-lg shadow-lg"
                                                    />
                                                </div>

                                                <!-- Video preview -->
                                                <div
                                                    v-else-if="
                                                        getFileExtension(
                                                            file
                                                        ) === 'mp4'
                                                    "
                                                >
                                                    <video
                                                        :src="
                                                            previewUrls.get(
                                                                index
                                                            )
                                                        "
                                                        controls
                                                        class="w-full max-w-xs sm:max-w-md mx-auto rounded-lg shadow-lg"
                                                    ></video>
                                                </div>

                                                <!-- Audio preview -->
                                                <div
                                                    v-else-if="
                                                        [
                                                            'mp3',
                                                            'wav',
                                                            'flac',
                                                        ].includes(
                                                            getFileExtension(
                                                                file
                                                            )
                                                        )
                                                    "
                                                >
                                                    <audio
                                                        :src="
                                                            previewUrls.get(
                                                                index
                                                            )
                                                        "
                                                        controls
                                                        class="w-full max-w-xs sm:max-w-md mx-auto"
                                                    ></audio>
                                                </div>

                                                <!-- Text file preview -->
                                                <div
                                                    v-else-if="
                                                        [
                                                            'txt',
                                                            'md',
                                                            'json',
                                                            'csv',
                                                            'xml',
                                                            'torrent',
                                                        ].includes(
                                                            getFileExtension(
                                                                file
                                                            )
                                                        )
                                                    "
                                                    class="w-full"
                                                >
                                                    <div
                                                        class="w-full max-w-full overflow-hidden rounded-lg"
                                                        :style="{
                                                            backgroundColor:
                                                                isDark
                                                                    ? 'rgba(0,0,0,0.3)'
                                                                    : 'rgba(255,255,255,0.7)',
                                                        }"
                                                    >
                                                        <pre
                                                            class="text-xs sm:text-sm p-3 sm:p-4 whitespace-pre-wrap overflow-auto max-h-32 w-full block"
                                                            :style="{
                                                                color: isDark
                                                                    ? '#d1d5db'
                                                                    : '#374151',
                                                                wordBreak:
                                                                    'break-word',
                                                                overflowWrap:
                                                                    'break-word',
                                                                maxWidth:
                                                                    '100%',
                                                                display:
                                                                    'block',
                                                            }"
                                                            >{{
                                                                textPreviews.get(
                                                                    index
                                                                )
                                                            }}</pre
                                                        >
                                                    </div>
                                                </div>

                                                <!-- PDF preview -->
                                                <div
                                                    v-else-if="
                                                        getFileExtension(
                                                            file
                                                        ) === 'pdf'
                                                    "
                                                >
                                                    <div
                                                        class="text-center p-4"
                                                    >
                                                        <svg
                                                            class="w-16 h-16 mx-auto mb-2 text-red-500"
                                                            fill="currentColor"
                                                            viewBox="0 0 24 24"
                                                        >
                                                            <path
                                                                d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"
                                                            />
                                                        </svg>
                                                        <p
                                                            class="text-sm"
                                                            :style="{
                                                                color: isDark
                                                                    ? '#a1a1aa'
                                                                    : '#71717a',
                                                            }"
                                                        >
                                                            PDF preview not
                                                            available
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Progress Bar -->
                                <div
                                    v-if="progress > 0 && progress < 100"
                                    class="mt-4 sm:mt-6"
                                >
                                    <div
                                        class="flex justify-between text-xs sm:text-sm mb-2"
                                        :style="{
                                            color: isDark
                                                ? '#a1a1aa'
                                                : '#71717a',
                                        }"
                                    >
                                        <span>Uploading...</span>
                                        <span>{{ progress }}%</span>
                                    </div>
                                    <div
                                        class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 sm:h-3 overflow-hidden"
                                    >
                                        <div
                                            class="h-2 sm:h-3 rounded-full transition-all duration-300"
                                            :style="{
                                                background: buttonGradient,
                                                width: progress + '%',
                                            }"
                                        ></div>
                                    </div>
                                </div>

                                <!-- Upload Button -->
                                <div v-if="!uploadComplete" class="pt-4 sm:pt-6">
                                    <button
                                        @click="uploadFiles"
                                        :disabled="isUploading"
                                        class="w-full py-3 sm:py-4 text-sm sm:text-base text-white font-semibold rounded-xl sm:rounded-2xl transition-all duration-300 hover:scale-[1.02] hover:shadow-2xl disabled:opacity-50 disabled:hover:scale-100"
                                        :style="{ background: buttonGradient }"
                                    >
                                        <span
                                            v-if="isUploading"
                                            class="flex items-center justify-center"
                                        >
                                            <svg
                                                class="animate-spin -ml-1 mr-3 h-5 w-5 text-white"
                                                xmlns="http://www.w3.org/2000/svg"
                                                fill="none"
                                                viewBox="0 0 24 24"
                                            >
                                                <circle
                                                    class="opacity-25"
                                                    cx="12"
                                                    cy="12"
                                                    r="10"
                                                    stroke="currentColor"
                                                    stroke-width="4"
                                                ></circle>
                                                <path
                                                    class="opacity-75"
                                                    fill="currentColor"
                                                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                                ></path>
                                            </svg>
                                            {{
                                                progress > 0
                                                    ? `Uploading... ${progress}%`
                                                    : "Uploading..."
                                            }}
                                        </span>
                                        <span v-else>Upload Files</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Technical Specifications -->
            <section
                ref="featuresSection"
                class="px-4 sm:px-6 lg:px-8 py-12"
            >
                <div class="max-w-6xl mx-auto">
                    <div class="bg-gray-900 border border-gray-700 rounded-lg p-6">
                        <div class="space-y-4">
                            <div class="text-green-400 font-mono">
                                <span class="text-gray-500">$</span> cat /etc/pingo/specs.json
                            </div>
                            
                            <pre class="text-sm text-green-400 font-mono overflow-x-auto">{{
                                JSON.stringify({
                                    "project": "pingo-share",
                                    "version": "2.1.0-alpha",
                                    "architecture": "microservices",
                                    "backend": {
                                        "language": "Go",
                                        "framework": "Fiber",
                                        "database": "SQLite/PostgreSQL",
                                        "encryption": "AES-256-GCM",
                                        "containerization": "Docker"
                                    },
                                    "frontend": {
                                        "framework": "Vue 3",
                                        "build_tool": "Vite",
                                        "styling": "TailwindCSS",
                                        "typescript": true,
                                        "pwa": true
                                    },
                                    "features": {
                                        "max_file_size": "unlimited",
                                        "concurrent_uploads": 50,
                                        "transfer_protocol": "HTTP/2",
                                        "encryption": "end-to-end",
                                        "authentication": "optional",
                                        "self_hosted": true,
                                        "docker_compose": true,
                                        "reverse_proxy": "nginx"
                                    },
                                    "security": {
                                        "vulnerability_scan": "passed",
                                        "penetration_test": "passed",
                                        "ssl_rating": "A+",
                                        "owasp_compliance": true
                                    }
                                }, null, 2)
                            }}</pre>
                            
                            <!-- Terminal Commands Demo -->
                            <div class="space-y-2 mt-6">
                                <div class="text-green-400 font-mono">
                                    <span class="text-gray-500">$</span> curl -X POST https://pingo.share/api/upload
                                </div>
                                <div class="text-gray-300 pl-4 font-mono text-sm">
                                    {"status": "success", "upload_id": "a7f5d...", "encryption": "enabled"}
                                </div>
                            </div>
                            
                            <!-- Installation Instructions -->
                            <div class="mt-8 bg-black border border-green-500 rounded p-4">
                                <div class="text-yellow-400 font-mono mb-3">QUICK START:</div>
                                <div class="space-y-2 font-mono text-sm">
                                    <div class="text-green-400">
                                        <span class="text-gray-500">$</span> git clone https://github.com/R8bert/pingo-share.git
                                    </div>
                                    <div class="text-green-400">
                                        <span class="text-gray-500">$</span> cd pingo-share
                                    </div>
                                    <div class="text-green-400">
                                        <span class="text-gray-500">$</span> docker-compose up -d
                                    </div>
                                    <div class="text-gray-400"># Server running on http://localhost:3000</div>
                                </div>
                            </div>
                            
                            <!-- GitHub Stats -->
                            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mt-6">
                                <div class="bg-black border border-gray-600 rounded p-3 text-center">
                                    <div class="text-2xl font-mono text-yellow-400">{{ Math.floor(Math.random() * 100 + 200) }}</div>
                                    <div class="text-xs text-gray-400 font-mono">GitHub Stars</div>
                                </div>
                                <div class="bg-black border border-gray-600 rounded p-3 text-center">
                                    <div class="text-2xl font-mono text-blue-400">{{ Math.floor(Math.random() * 50 + 45) }}</div>
                                    <div class="text-xs text-gray-400 font-mono">Forks</div>
                                </div>
                                <div class="bg-black border border-gray-600 rounded p-3 text-center">
                                    <div class="text-2xl font-mono text-green-400">{{ Math.floor(Math.random() * 10 + 15) }}</div>
                                    <div class="text-xs text-gray-400 font-mono">Contributors</div>
                                </div>
                                <div class="bg-black border border-gray-600 rounded p-3 text-center">
                                    <div class="text-2xl font-mono text-purple-400">MIT</div>
                                    <div class="text-xs text-gray-400 font-mono">License</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            
            <!-- Footer -->
            <footer class="px-4 sm:px-6 lg:px-8 py-8 border-t border-gray-800">
                <div class="max-w-6xl mx-auto text-center">
                    <div class="space-y-4 font-mono">
                        <div class="text-green-400">
                            <span class="text-gray-500">$</span> echo "Made with ❤️ by the open source community"
                        </div>
                        <div class="text-gray-400 text-sm">
                            PInGO Share • Licensed under MIT • 
                            <a href="https://github.com/R8bert/pingo-share" class="text-cyan-400 hover:text-cyan-300">
                                View on GitHub
                            </a>
                        </div>
                    </div>
                </div>
            </footer>
        </main>
    </div>
</template>
                                            d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                                        ></path>
                                    </svg>
                                </div>
                                <h3
                                    class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"
                                    :style="{
                                        color: isDark ? '#ffffff' : '#000000',
                                    }"
                                >
                                    End-to-End Encryption
                                </h3>
                                <p
                                    class="text-sm sm:text-base"
                                    :style="{
                                        color: isDark ? '#a1a1aa' : '#71717a',
                                    }"
                                >
                                    Your files are encrypted before they leave
                                    your device, ensuring maximum security.
                                </p>
                            </div>
                        </div>

                        <!-- Feature 2 -->
                        <div class="relative group">
                            <div
                                class="absolute inset-0 bg-gradient-to-r from-green-600/20 to-blue-600/20 rounded-2xl blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                            ></div>
                            <div
                                class="relative backdrop-blur-xl border rounded-xl sm:rounded-2xl p-6 sm:p-8 transition-all duration-300 group-hover:scale-105"
                                :style="{
                                    backgroundColor: isDark
                                        ? 'rgba(255,255,255,0.05)'
                                        : 'rgba(255,255,255,0.8)',
                                    borderColor: isDark
                                        ? 'rgba(255,255,255,0.1)'
                                        : 'rgba(0,0,0,0.1)',
                                }"
                            >
                                <div
                                    class="w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-r from-green-500 to-blue-500 rounded-xl sm:rounded-2xl flex items-center justify-center mb-4 sm:mb-6"
                                >
                                    <svg
                                        class="w-6 h-6 sm:w-8 sm:h-8 text-white"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M13 10V3L4 14h7v7l9-11h-7z"
                                        ></path>
                                    </svg>
                                </div>
                                <h3
                                    class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"
                                    :style="{
                                        color: isDark ? '#ffffff' : '#000000',
                                    }"
                                >
                                    Lightning Fast
                                </h3>
                                <p
                                    class="text-sm sm:text-base"
                                    :style="{
                                        color: isDark ? '#a1a1aa' : '#71717a',
                                    }"
                                >
                                    Optimized for speed with parallel uploads
                                    and smart compression.
                                </p>
                            </div>
                        </div>

                        <!-- Feature 3 -->
                        <div class="relative group">
                            <div
                                class="absolute inset-0 bg-gradient-to-r from-purple-600/20 to-pink-600/20 rounded-2xl blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                            ></div>
                            <div
                                class="relative backdrop-blur-xl border rounded-xl sm:rounded-2xl p-6 sm:p-8 transition-all duration-300 group-hover:scale-105"
                                :style="{
                                    backgroundColor: isDark
                                        ? 'rgba(255,255,255,0.05)'
                                        : 'rgba(255,255,255,0.8)',
                                    borderColor: isDark
                                        ? 'rgba(255,255,255,0.1)'
                                        : 'rgba(0,0,0,0.1)',
                                }"
                            >
                                <div
                                    class="w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl sm:rounded-2xl flex items-center justify-center mb-4 sm:mb-6"
                                >
                                    <svg
                                        class="w-6 h-6 sm:w-8 sm:h-8 text-white"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            stroke-linecap="round"
                                            stroke-linejoin="round"
                                            stroke-width="2"
                                            d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                                        ></path>
                                    </svg>
                                </div>
                                <h3
                                    class="text-lg sm:text-xl font-bold mb-3 sm:mb-4"
                                    :style="{
                                        color: isDark ? '#ffffff' : '#000000',
                                    }"
                                >
                                    No Registration
                                </h3>
                                <p
                                    class="text-sm sm:text-base"
                                    :style="{
                                        color: isDark ? '#a1a1aa' : '#71717a',
                                    }"
                                >
                                    Start sharing immediately without creating
                                    accounts or providing personal info.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Footer -->
            <footer
                class="relative py-12 px-4 sm:px-6 lg:px-8 border-t"
                :style="{
                    borderColor: isDark
                        ? 'rgba(255,255,255,0.1)'
                        : 'rgba(0,0,0,0.1)',
                }"
            >
                <div class="max-w-7xl mx-auto text-center">
                    <p :style="{ color: isDark ? '#a1a1aa' : '#71717a' }">
                        © 2025 PInGO Share. Built with ❤️ for the community.
                    </p>
                </div>
            </footer>
        </main>

        <!-- Messages -->
        <div
            v-if="message.text"
            class="fixed top-6 right-6 p-6 rounded-3xl shadow-2xl z-50 backdrop-blur-xl border max-w-sm animate-fade-in"
            :style="{
                backgroundColor:
                    message.type === 'success'
                        ? isDark
                            ? 'rgba(34, 197, 94, 0.15)'
                            : 'rgba(34, 197, 94, 0.1)'
                        : isDark
                        ? 'rgba(239, 68, 68, 0.15)'
                        : 'rgba(239, 68, 68, 0.1)',
                borderColor: message.type === 'success' ? '#22c55e' : '#ef4444',
                color: message.type === 'success' ? '#22c55e' : '#ef4444',
            }"
        >
            <div class="flex items-center space-x-3">
                <div
                    v-if="message.type === 'success'"
                    class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0"
                >
                    <svg
                        class="w-5 h-5 text-white"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M5 13l4 4L19 7"
                        ></path>
                    </svg>
                </div>
                <div
                    v-else
                    class="w-8 h-8 bg-red-500 rounded-full flex items-center justify-center flex-shrink-0"
                >
                    <svg
                        class="w-5 h-5 text-white"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M6 18L18 6M6 6l12 12"
                        ></path>
                    </svg>
                </div>
                <div class="flex-1">
                    <p class="font-semibold">{{ message.text }}</p>
                    <p
                        v-if="message.type === 'success' && progress === 100"
                        class="text-sm opacity-75 mt-1"
                    >
                        Redirecting to download page...
                    </p>
                </div>
            </div>
        </div>

        <!-- GitHub Icon - Bottom Left -->
        <!-- Container for GitHub Icon and ShinyText -->
        <!-- Container for GitHub Icon and ShinyText -->
        <a
            href="https://github.com/R8bert/PInGO-Share"
            target="_blank"
            rel="noopener noreferrer"
            class="fixed bottom-4 left-4 z-40 flex items-center space-x-2"
            :style="{ color: isDark ? '#9ca3af' : '#6b7280' }"
            title="View GitHub Repository"
        >
            <!-- GitHub Icon -->
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path
                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
                />
            </svg>
</template>

<script setup lang="ts">
import { ref, onMounted, onUnmounted, computed } from "vue";
import { useAuth } from "../../composables/useAuth";
import { useTheme } from "../../composables/useTheme";
import { useUIColors } from "../../composables/useUIColors";
import { useIcons } from "../../composables/useIcons";
import axios from "axios";
import {
    CloudArrowUpIcon,
    XMarkIcon,
    EyeIcon,
    EyeSlashIcon,
} from "@heroicons/vue/24/outline";

const { isAuthenticated } = useAuth();
const { isDark } = useTheme();
const {
    primaryGradient,
    buttonGradient,
    hoverGradient,
} = useUIColors();
const { 
  getFileIcon, 
  getFileIconAlt 
} = useIcons();

// ASCII Art for terminal aesthetic
const asciiArt = `
 ██████╗ ██╗███╗   ██╗ ██████╗  ██████╗     ███████╗██╗  ██╗ █████╗ ██████╗ ███████╗
 ██╔══██╗██║████╗  ██║██╔════╝ ██╔═══██╗    ██╔════╝██║  ██║██╔══██╗██╔══██╗██╔════╝
 ██████╔╝██║██╔██╗ ██║██║  ███╗██║   ██║    ███████╗███████║███████║██████╔╝█████╗  
 ██╔═══╝ ██║██║╚██╗██║██║   ██║██║   ██║    ╚════██║██╔══██║██╔══██║██╔══██╗██╔══╝  
 ██║     ██║██║ ╚████║╚██████╔╝╚██████╔╝    ███████║██║  ██║██║  ██║██║  ██║███████╗
 ╚═╝     ╚═╝╚═╝  ╚═══╝ ╚═════╝  ╚═════╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
                                                                                       
                          DECENTRALIZED FILE TRANSFER PROTOCOL v2.1.0               
`;

// Typewriter effect variables
const showTypewriter = ref(true);
const typewriterText = ref("");
const messages = [
    "SECURE FILE TRANSFER INITIALIZED...",
    "ENCRYPTION ALGORITHMS LOADED...",
    "PEER-TO-PEER NETWORK ESTABLISHED...",
    "READY FOR DEPLOYMENT..."
];

let messageIndex = 0;
let charIndex = 0;

const typeWriter = () => {
    if (charIndex < messages[messageIndex].length) {
        typewriterText.value += messages[messageIndex].charAt(charIndex);
        charIndex++;
        setTimeout(typeWriter, 50);
    } else {
        setTimeout(() => {
            typewriterText.value = "";
            charIndex = 0;
            messageIndex = (messageIndex + 1) % messages.length;
            typeWriter();
        }, 2000);
    }
};

// Additional properties for terminal UI
const shareUrl = ref("");
const uploadProgress = ref(0);
const isDragOver = ref(false);

// GitHub functionality
const openGitHub = () => {
    window.open('https://github.com/R8bert/pingo-share', '_blank');
};

// File handling improvements
const onFileSelect = (event: Event) => {
    const target = event.target as HTMLInputElement;
    if (target.files) {
        selectedFiles.value = Array.from(target.files);
    }
};

const formatFileSize = (bytes: number): string => {
    if (bytes === 0) return "0 B";
    const k = 1024;
    const sizes = ["B", "KB", "MB", "GB", "TB"];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
};

const uploadFiles = async () => {
    if (selectedFiles.value.length === 0) return;
    
    isUploading.value = true;
    uploadProgress.value = 0;
    
    // Simulate upload progress for terminal effect
    const progressInterval = setInterval(() => {
        uploadProgress.value += Math.random() * 15;
        if (uploadProgress.value >= 100) {
            uploadProgress.value = 100;
            clearInterval(progressInterval);
            setTimeout(() => {
                isUploading.value = false;
                uploadComplete.value = true;
                shareUrl.value = `https://pingo.share/d/${Math.random().toString(36).substring(2, 15)}`;
            }, 500);
        }
    }, 200);
};

const copyLink = async () => {
    try {
        await navigator.clipboard.writeText(shareUrl.value);
        // Terminal-style feedback could be added here
    } catch (err) {
        console.error('Failed to copy link:', err);
    }
};

const uploadNew = () => {
    uploadComplete.value = false;
    selectedFiles.value = [];
    shareUrl.value = "";
    uploadProgress.value = 0;
    isUploading.value = false;
};

// Helper methods for file icons - same as UploadsTab
const getFileIconPath = (filename: string) => {
  return getFileIcon(filename)
}

const getFileIconAltText = (filename: string) => {
  return getFileIconAlt(filename)
}

// Apple Hello typewriter effect with highlight - exactly like shadcn example
const words = [" secure", " instantly", " easy", " self-hosted"];
const currentWordIndex = ref(0);
const displayedChars = ref(0);
const isHighlighted = ref(false);

const longestWord = computed(() => {
    return words.reduce((a, b) => a.length > b.length ? a : b);
});

// Apple Hello effect cycle with highlight
const startAppleEffect = async () => {
    const currentWord = words[currentWordIndex.value];
    
    // Reset states
    displayedChars.value = 0;
    isHighlighted.value = false;
    
    // Type out characters one by one
    for (let i = 0; i <= currentWord.length; i++) {
        displayedChars.value = i;
        await new Promise(resolve => setTimeout(resolve, 100)); // 100ms per character
    }
    
    // Brief pause after typing
    await new Promise(resolve => setTimeout(resolve, 300));
    
    // Show progressive highlight
    isHighlighted.value = true;
    
    // Keep highlighted and text visible longer
    await new Promise(resolve => setTimeout(resolve, 2000)); // Keep visible for 2 seconds
    
    // Start erasing effect (highlight and text disappear together)
    for (let i = currentWord.length; i >= 0; i--) {
        displayedChars.value = i;
        await new Promise(resolve => setTimeout(resolve, 50)); // Faster erase
    }
    
    // Remove highlight when text is fully erased
    isHighlighted.value = false;
    
    // Brief pause before next word
    await new Promise(resolve => setTimeout(resolve, 300));
    
    // Move to next word
    currentWordIndex.value = (currentWordIndex.value + 1) % words.length;
    
    // Continue cycle
    startAppleEffect();
};

onMounted(() => {
    // Start typewriter effect
    typeWriter();
    // Start after page loads
    setTimeout(() => {
        startAppleEffect();
    }, 1000);
});

onUnmounted(() => {
    // Cleanup if needed
});

// Refs
const fileInput = ref<HTMLInputElement | null>(null);
const uploadSection = ref<HTMLElement | null>(null);
const featuresSection = ref<HTMLElement | null>(null);
const { getSettings } = useAuth();
// State
const selectedFiles = ref<File[]>([]);
const isDragging = ref(false);
const isUploading = ref(false);
const progress = ref(0);
const uploadComplete = ref(false);
const uploadedUrl = ref("");
const message = ref({ text: "", type: "success" as "success" | "error" });
const previewingFiles = ref<Set<number>>(new Set());
const previewUrls = ref<Map<number, string>>(new Map());
const textPreviews = ref<Map<number, string>>(new Map());
const maxUploadSize = ref<number>(104857600); // Default 100 MB

const validityOptions = ref([
    { value: "7days", label: "7 Days", description: "One week" },
    { value: "1month", label: "1 Month", description: "30 days" },
    { value: "6months", label: "6 Months", description: "Half year" },
    { value: "1year", label: "1 Year", description: "12 months" },
    { value: "never", label: "Never", description: "Permanent" },
]);
const selectedValidity = ref("7days");
const maxAllowedValidity = ref("7days");

// Methods
const triggerFileInput = () => {
    fileInput.value?.click();
};

const onFileChange = (event: Event) => {
    const target = event.target as HTMLInputElement;
    if (target.files) {
        selectedFiles.value = Array.from(target.files);
    }
};

const onDrop = (event: DragEvent) => {
    isDragging.value = false;
    if (event.dataTransfer?.files) {
        selectedFiles.value = Array.from(event.dataTransfer.files);
    }
};

const removeFile = (index: number) => {
    // Clean up preview URLs and refs when removing file
    if (previewingFiles.value.has(index)) {
        const url = previewUrls.value.get(index);
        if (url) URL.revokeObjectURL(url);
        previewUrls.value.delete(index);
        textPreviews.value.delete(index);
        previewingFiles.value.delete(index);
    }

    selectedFiles.value.splice(index, 1);

    // Re-index remaining files
    const newPreviewingFiles = new Set<number>();
    const newPreviewUrls = new Map<number, string>();
    const newTextPreviews = new Map<number, string>();

    previewingFiles.value.forEach((previewIndex) => {
        if (previewIndex > index) {
            newPreviewingFiles.add(previewIndex - 1);
            const url = previewUrls.value.get(previewIndex);
            if (url) newPreviewUrls.set(previewIndex - 1, url);
            const textPreview = textPreviews.value.get(previewIndex);
            if (textPreview) newTextPreviews.set(previewIndex - 1, textPreview);
        } else if (previewIndex < index) {
            newPreviewingFiles.add(previewIndex);
            const url = previewUrls.value.get(previewIndex);
            if (url) newPreviewUrls.set(previewIndex, url);
            const textPreview = textPreviews.value.get(previewIndex);
            if (textPreview) newTextPreviews.set(previewIndex, textPreview);
        }
    });

    previewingFiles.value = newPreviewingFiles;
    previewUrls.value = newPreviewUrls;
    textPreviews.value = newTextPreviews;
};

const togglePreview = (index: number) => {
    if (previewingFiles.value.has(index)) {
        // Hide preview
        previewingFiles.value.delete(index);
        const url = previewUrls.value.get(index);
        if (url) {
            URL.revokeObjectURL(url);
            previewUrls.value.delete(index);
        }
        textPreviews.value.delete(index);
    } else {
        // Show preview
        previewingFiles.value.add(index);
        const file = selectedFiles.value[index];
        const fileExtension = getFileExtension(file);

        if (["txt", "md", "json", "csv", "xml"].includes(fileExtension)) {
            // Handle text file preview
            const reader = new FileReader();
            reader.onload = (e) => {
                const content = e.target?.result as string;
                const truncatedContent =
                    content.length > 1000
                        ? content.substring(0, 1000) + "\n\n... (truncated)"
                        : content;
                textPreviews.value.set(index, truncatedContent);
            };
            reader.readAsText(file);
        } else {
            // Handle other file types (images, videos, audio)
            createPreviewUrl(file, index);
        }
    }
};

const createPreviewUrl = (file: File, index: number) => {
    const url = URL.createObjectURL(file);
    previewUrls.value.set(index, url);
};

const canPreview = (file: File): boolean => {
    const ext = getFileExtension(file);
    return [
        "mp4",
        "pdf",
        "jpg",
        "jpeg",
        "png",
        "gif",
        "webp",
        "txt",
        "md",
        "json",
        "csv",
        "xml",
        "torrent",
        "mp3",
        "wav",
        "flac",
    ].includes(ext);
};

const getFileExtension = (file: File): string => {
    return file.name.split(".").pop()?.toLowerCase() || "";
};

const openLink = () => {
    if (uploadedUrl.value) {
        window.open(uploadedUrl.value, '_blank');
    }
};

const scrollToUpload = () => {
    uploadSection.value?.scrollIntoView({ behavior: "smooth" });
};

const scrollToFeatures = () => {
    featuresSection.value?.scrollIntoView({ behavior: "smooth" });
};

const loadSettings = async () => {
    try {
        const settings = await getSettings();
        maxUploadSize.value = settings.maxUploadSize || 104857600;
        maxAllowedValidity.value = settings.maxValidity || "7days";

        // Filter validity options based on max allowed
        const validityOrder = ["7days", "1month", "6months", "1year", "never"];
        const maxIndex = validityOrder.indexOf(maxAllowedValidity.value);

        if (maxIndex !== -1) {
            const allowedOptions = validityOrder.slice(0, maxIndex + 1);
            validityOptions.value = validityOptions.value.filter((option) =>
                allowedOptions.includes(option.value)
            );
        }

        // Set default validity to first available option
        if (validityOptions.value.length > 0) {
            selectedValidity.value = validityOptions.value[0].value;
        }
    } catch (error) {
        console.error("Error loading settings:", error);
    }
};

onMounted(() => {
    // Scroll to top smoothly when page loads
    loadSettings();
    window.scrollTo({ top: 0, behavior: "smooth" });
});

onUnmounted(() => {
    // Cleanup handled in startRotationCycle
});
</script>

<style scoped>
/* Terminal Matrix Background Effect */
.matrix-bg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        repeating-linear-gradient(
            0deg,
            transparent,
            transparent 2px,
            rgba(0, 255, 0, 0.03) 2px,
            rgba(0, 255, 0, 0.03) 4px
        ),
        repeating-linear-gradient(
            90deg,
            transparent,
            transparent 100px,
            rgba(0, 255, 0, 0.03) 100px,
            rgba(0, 255, 0, 0.03) 101px
        );
    animation: matrix-flow 20s linear infinite;
}

@keyframes matrix-flow {
    0% {
        transform: translateY(-100px);
    }
    100% {
        transform: translateY(100px);
    }
}

/* Terminal Scanlines */
.terminal-scanlines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        transparent 50%,
        rgba(0, 255, 0, 0.03) 50%
    );
    background-size: 100% 4px;
    animation: scanlines 0.1s linear infinite;
}

@keyframes scanlines {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 0 4px;
    }
}

/* Typewriter Effect */
.typewriter {
    font-family: 'Courier New', monospace;
}

/* JSON Syntax Highlighting */
pre {
    white-space: pre-wrap;
    word-wrap: break-word;
}

/* Terminal Cursor Blink */
@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
}

.animate-pulse {
    animation: blink 1s infinite;
}

/* Scrollbar styling for terminal look */
::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: #1a1a1a;
}

::-webkit-scrollbar-thumb {
    background: #00ff00;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #00cc00;
}
</style>

<style scoped>
/* Smooth scrolling for the entire page */
html {
    scroll-behavior: smooth;
}

@keyframes fade-in {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fade-in-delay {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fade-in-delay-2 {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
.shake {
  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
}

@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%,
  60% {
    transform: translate3d(4px, 0, 0);
  }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient-move 3s linear infinite;
}


.animate-fade-in {
    animation: fade-in 0.8s ease-out;
}

.animate-fade-in-delay {
    animation: fade-in-delay 0.8s ease-out 0.2s both;
}

.animate-fade-in-delay-2 {
    animation: fade-in-delay-2 0.8s ease-out 0.4s both;
}


@keyframes liquid-glow {
    0%,
    100% {
        filter: drop-shadow(0 0 10px #ef444460) drop-shadow(0 0 20px #ef444440);
    }
    50% {
        filter: drop-shadow(0 0 15px #ef444480) drop-shadow(0 0 30px #ef444460);
    }
}


@keyframes gradient-move {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

/* Clean Modern Highlight */
.clean-highlight-sweep {
  background: linear-gradient(
    90deg,
    rgba(59, 130, 246, 0.4) 0%,
    rgba(147, 51, 234, 0.45) 30%,
    rgba(236, 72, 153, 0.4) 60%,
    rgba(251, 146, 60, 0.4) 100%
  );
  transform: scaleX(0);
  transform-origin: left center;
  animation: clean-sweep 0.8s ease-out forwards;
  border-radius: 6px;
  box-shadow: 0 0 20px rgba(147, 51, 234, 0.2);
}

@keyframes clean-sweep {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  30% {
    opacity: 1;
  }
  100% {
    transform: scaleX(1);
    opacity: 0.9;
  }
}

/* Component-specific HaloHandletter font */
@font-face {
  font-family: 'HaloHandletter-Local';
  src: url('/HaloHandletter.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

/* Component-specific Crima font */


.halo-handletter-local {
  font-family: 'HaloHandletter-Local', 'Brush Script MT', 'Segoe Print', cursive !important;
}

/* Force font for animated text */
.animated-text-container {
  font-family: 'Crima-Local', 'HaloHandletter-Local', 'HaloHandletter', 'Comic Sans MS', cursive !important;
  letter-spacing: 0.065em;
}

.animated-text-container * {
  font-family: inherit !important;
}


</style>
